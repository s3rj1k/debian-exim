From d508b5ca595a418667a1ae10e6cadf48a901c6f3 Mon Sep 17 00:00:00 2001
From: Jeremy Harris <jgh146exb@wizmail.org>
Date: Fri, 7 Jun 2019 11:54:10 +0100
Subject: [PATCH 26/34] Fix detection of 32b platform at build time.  Bug 2405

(cherry picked from commit 26dd3aa007b3b77969610c031f59388e0953bd00)
(cherry picked from commit da7f749864e0807f796b8fa19573484c92bdc5c2)
(cherry picked from commit a8e52cc464c132b8c88718af4367a01538d65b5a)
---
 src/buildconfig.c        | 12 +++---
 test/scripts/0000-Basic/0002 | 72 +++++++++++++++++++-----------------
 test/stdout/0002             | 72 +++++++++++++++++++-----------------
 3 files changed, 83 insertions(+), 73 deletions(-)

diff --git a/src/buildconfig.c b/src/buildconfig.c
index 3d404f100..ce01cfb42 100644
--- a/src/buildconfig.c
+++ b/src/buildconfig.c
@@ -111,6 +111,7 @@ unsigned long test_ulong_t = 0L;
 unsigned int test_uint_t = 0;
 #endif
 long test_long_t = 0;
+long long test_longlong_t = 0;
 int test_int_t = 0;
 FILE *base;
 FILE *new;
@@ -155,15 +156,16 @@ This assumption is known to be OK for the common operating systems. */
 
 fprintf(new, "#ifndef OFF_T_FMT\n");
 if (sizeof(test_off_t) > sizeof(test_long_t))
-  {
   fprintf(new, "# define OFF_T_FMT  \"%%lld\"\n");
-  fprintf(new, "# define LONGLONG_T long long int\n");
-  }
 else
-  {
   fprintf(new, "# define OFF_T_FMT  \"%%ld\"\n");
+fprintf(new, "#endif\n\n");
+
+fprintf(new, "#ifndef LONGLONG_T\n");
+if (sizeof(test_longlong_t) > sizeof(test_long_t))
+  fprintf(new, "# define LONGLONG_T long long int\n");
+else
   fprintf(new, "# define LONGLONG_T long int\n");
-  }
 fprintf(new, "#endif\n\n");
 
 /* Now do the same thing for time_t variables. If the length is greater than
-- 
2.23.0.rc1

